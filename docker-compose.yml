version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.front
    ports:
      - 3001:3001
  backend:
    build:
      context: .
      dockerfile: Dockerfile.back
    ports:
      - 3000:3000
#   frontend:
#     container_name: front-nextjs
#     image: node:18
#     restart: always
#     user: node
#     working_dir: /home/node/app
#     environment:
#       - CHOKIDAR_USEPOLLING=true
#       - WATCHPACK_POLLING=true
#       - FAST_REFRESH=false
#       - WDS_SOCKET_PORT=30000
#     volumes:
#       - ./front:/home/node/app
#     expose:
#       - 3000    
#     command: sh -c 'npm install && npm run dev'
#     ports:
#       - 3000:3000
      
#   backend:
#     container_name: back-nestjs
#     image: node:18
#     restart: always
#     user: node
#     working_dir: /home/node/app
#     environment:
#       - HOST_ENV=postgres
#       - PORT_ENV=5432
#       - USERNAME_ENV=postgres
#       - PASSWORD_ENV=postgres
#       - DATABASE_ENV=mydatabase
#     volumes:
#       - ./back:/home/node/app
#     expose:
#       - 3001    
#     command: sh -c 'npm install && npm run start:dev'
#     ports:
#       - 3001:3001
      
#   postgres:
#     container_name: postgres
#     image: postgres:latest
#     restart: always
#     environment:
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=postgres
#       - POSTGRES_DB=mydatabase
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     expose:
#       - 5432
#     ports:
#       - 5432:5432

# volumes:
#   postgres_data:
#     driver: local
